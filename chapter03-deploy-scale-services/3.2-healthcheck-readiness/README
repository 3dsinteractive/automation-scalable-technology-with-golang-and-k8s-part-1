Healthcheck Readiness

0. Look into the slides about service healthcheck

1. Open vscode at chapter03-deploy-healthchecks/3.2-healthcheck-readiness

2. Register for https://hub.docker.com

3. Create public repository call [your-docker-repository-name]/automation-technology

4. Make sure docker is running (Check the docker icon in task bar)

5. Make sure you are logged in with your docker account
$ docker login
[username]
[password]

6. Update file deploy.sh change 
DOCKER_REPOSITORY=
to
DOCKER_REPOSITORY=[your-docker-repository-name]

7. Run command (deploy.sh will be the file used to build your project, especially when it integrate with ci/cd)
$ ./deploy.sh
This will build the Dockerfile and push image to [your-docker-repository-name]/automation-technology

8. Run command 
$ cd k8s

9. Run command to start databases
$ kubectl apply -f 00-databases/.

** Wait until redis is OK

10. Run command
$ kubectl get po -n healthcheck
NAME                     READY   STATUS    RESTARTS   AGE
redis-577d58dd6c-c6595   1/1     Running   0          3m55s

11. Run command to start application
$ kubectl apply -f 01-application/.

12. Run command to make sure all services is OK
$ kubectl get po -n healthcheck
register-api-758f494ccd-7xqmx   1/1     Running   0          109s
register-api-758f494ccd-gbtdg   1/1     Running   0          109s

13. Run command
$ curl -X POST "http://kubernetes.docker.internal/citizen"
{"status":"success"}

14. Run command 
$ watch "kubectl get po -n healthcheck"

15. Open other terminal and Run command to kill redis
$ kubectl delete -f 01-redis.yml

16. Wait to see service healthcheck fail
** Notice RESTARTS will increase

17. Run command to get redis back
$ kubectl apply -f 01-redis.yml

18. Wait to see service come back

19. Explain healthcheck endpoint in sourcecode

20. Run command
$ kubectl delete ns healthcheck